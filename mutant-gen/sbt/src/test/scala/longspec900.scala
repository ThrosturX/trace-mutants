// imports
import scala.concurrent.duration._
import org.scalatest._
import akka.actor._
import akka.testkit._
import com.typesafe.config._

class Longspec900 extends TestKit(ActorSystem("longspec900-spec-test")) with ImplicitSender with FlatSpecLike with Matchers with BeforeAndAfterAll {

	override def afterAll() = system.shutdown()


	"The System-under-test (0)" should "AUTO-GEN-TEST (0)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(0))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(0))
		actorRef ! (new JBus.Unsubscribe(0))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(0))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(0))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(0))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(0))
		actorRef ! (new JBus.Publish(0, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(0))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(0))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(0, "foo"))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (1)" should "AUTO-GEN-TEST (1)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(1))
		actorRef ! (new JBus.Connect(1))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(1))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(1))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(1))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (2)" should "AUTO-GEN-TEST (2)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(2, "foo"))
		actorRef ! (new JBus.SubscribeCallback(2))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(2))
		actorRef ! (new JBus.UnsubscribeCallback(2))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(2))
		actorRef ! (new JBus.UnsubscribeCallback(2))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(2))
		actorRef ! (new JBus.Connect(2))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(2))
		actorRef ! (new JBus.Unsubscribe(2))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(2))
		actorRef ! (new JBus.CreateConnection(2))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(2))
		actorRef ! (new JBus.Unsubscribe(2))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(2))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (3)" should "AUTO-GEN-TEST (3)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(3))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(3))
		actorRef ! (new JBus.Disconnect(3))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(3))
		actorRef ! (new JBus.Publish(3, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(3, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(3))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(3))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(3, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(3, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(3))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (4)" should "AUTO-GEN-TEST (4)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(4, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(4))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (5)" should "AUTO-GEN-TEST (5)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(5))
		actorRef ! (new JBus.Disconnect(5))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(5))
		actorRef ! (new JBus.Unsubscribe(5))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(5))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(5))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (6)" should "AUTO-GEN-TEST (6)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(6))
		actorRef ! (new JBus.Unsubscribe(6))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(6))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(6, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (7)" should "AUTO-GEN-TEST (7)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(7))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(7, "foo"))
		actorRef ! (new JBus.Disconnect(7))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(7))
		actorRef ! (new JBus.Connect(7))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(7))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(7))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(7, "foo"))
		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(7, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(7, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(7))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (8)" should "AUTO-GEN-TEST (8)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(8))
		actorRef ! (new JBus.CreateConnection(8))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(8, "foo"))
		actorRef ! (new JBus.Unsubscribe(8))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(8))
		actorRef ! (new JBus.DestroyConnection(8))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(8, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(8, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(8))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(8))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (9)" should "AUTO-GEN-TEST (9)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(9, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(9))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (10)" should "AUTO-GEN-TEST (10)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(10))
		actorRef ! (new JBus.CreateConnection(10))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(10))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (11)" should "AUTO-GEN-TEST (11)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(11))
		actorRef ! (new JBus.Subscribe(11))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(11))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(11))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(11))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (12)" should "AUTO-GEN-TEST (12)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(12))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(12))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(12))
		actorRef ! (new JBus.CreateConnection(12))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(12))
		actorRef ! (new JBus.SubscribeCallback(12))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(12))
		actorRef ! (new JBus.CreateConnection(12))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(12))
		actorRef ! (new JBus.Connect(12))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(12, "foo"))
		actorRef ! (new JBus.Publish(12, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())

	}

	"The System-under-test (13)" should "AUTO-GEN-TEST (13)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(13))
		actorRef ! (new JBus.SubscribeCallback(13))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(13))
		actorRef ! (new JBus.SubscribeCallback(13))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(13, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(13))
		actorRef ! (new JBus.Subscribe(13))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(13, "foo"))
		actorRef ! (new JBus.Publish(13, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(13))
		actorRef ! (new JBus.SubscribeCallback(13))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(13))
		actorRef ! (new JBus.Subscribe(13))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())

	}

	"The System-under-test (14)" should "AUTO-GEN-TEST (14)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(14))
		actorRef ! (new JBus.CreateConnection(14))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(14, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(14))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (15)" should "AUTO-GEN-TEST (15)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(15))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(15))
		actorRef ! (new JBus.Connect(15))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(15))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(15))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(15))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (16)" should "AUTO-GEN-TEST (16)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(16))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(16))
		actorRef ! (new JBus.Subscribe(16))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(16, "foo"))
		actorRef ! (new JBus.CreateConnection(16))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(16, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(16, "foo"))
		actorRef ! (new JBus.SubscribeCallback(16))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(16, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(16))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(16))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(16, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (17)" should "AUTO-GEN-TEST (17)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(17))
		actorRef ! (new JBus.CreateConnection(17))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(17))
		actorRef ! (new JBus.Connect(17))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(17))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(17, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (18)" should "AUTO-GEN-TEST (18)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(18))
		actorRef ! (new JBus.CreateConnection(18))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(18))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(18))
		actorRef ! (new JBus.CreateConnection(18))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(18))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (19)" should "AUTO-GEN-TEST (19)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(19))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(19, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(19))
		actorRef ! (new JBus.Unsubscribe(19))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(19))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(19))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(19, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(19))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (20)" should "AUTO-GEN-TEST (20)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(20))
		actorRef ! (new JBus.CreateConnection(20))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(20, "foo"))
		actorRef ! (new JBus.CreateConnection(20))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(20))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(20))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(20, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(20))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(20))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (21)" should "AUTO-GEN-TEST (21)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(21))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(21))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(21))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (22)" should "AUTO-GEN-TEST (22)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(22))
		actorRef ! (new JBus.Connect(22))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(22))
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(22, "foo"))
		actorRef ! (new JBus.Disconnect(22))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (23)" should "AUTO-GEN-TEST (23)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(23))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(23))
		actorRef ! (new JBus.CreateConnection(23))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(23))
		actorRef ! (new JBus.Unsubscribe(23))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(23))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(23, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (24)" should "AUTO-GEN-TEST (24)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(24))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(24))
		actorRef ! (new JBus.Disconnect(24))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(24))
		actorRef ! (new JBus.Publish(24, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(24))
		actorRef ! (new JBus.Disconnect(24))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(24))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(24))
		actorRef ! (new JBus.Connect(24))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(24))
		actorRef ! (new JBus.Subscribe(24))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(24))
		actorRef ! (new JBus.Subscribe(24))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(24))
		actorRef ! (new JBus.Publish(24, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())

	}

	"The System-under-test (25)" should "AUTO-GEN-TEST (25)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(25))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(25))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(25))
		actorRef ! (new JBus.DestroyConnection(25))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(25))
		actorRef ! (new JBus.Subscribe(25))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(25, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(25, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(25, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (26)" should "AUTO-GEN-TEST (26)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(26))
		actorRef ! (new JBus.UnsubscribeCallback(26))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(26))
		actorRef ! (new JBus.SubscribeCallback(26))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(26))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(26))
		actorRef ! (new JBus.CreateConnection(26))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(26))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(26, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(26, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (27)" should "AUTO-GEN-TEST (27)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(27))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(27))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(27))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(27))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (28)" should "AUTO-GEN-TEST (28)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(28))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(28))
		actorRef ! (new JBus.Publish(28, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(28))
		actorRef ! (new JBus.Connect(28))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(28))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(28))
		actorRef ! (new JBus.Unsubscribe(28))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(28))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(28))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(28))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(28))
		actorRef ! (new JBus.SubscribeCallback(28))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(28))
		actorRef ! (new JBus.UnsubscribeCallback(28))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(28))
		actorRef ! (new JBus.SubscribeCallback(28))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(28))
		actorRef ! (new JBus.Unsubscribe(28))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())

	}

	"The System-under-test (29)" should "AUTO-GEN-TEST (29)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(29))
		actorRef ! (new JBus.UnsubscribeCallback(29))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(29, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(29, "foo"))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (30)" should "AUTO-GEN-TEST (30)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(30))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(30))
		actorRef ! (new JBus.Connect(30))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())

	}

	"The System-under-test (31)" should "AUTO-GEN-TEST (31)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(31))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(31))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (32)" should "AUTO-GEN-TEST (32)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(32))
		actorRef ! (new JBus.Subscribe(32))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(32, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(32))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (33)" should "AUTO-GEN-TEST (33)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(33))
		actorRef ! (new JBus.CreateConnection(33))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(33))
		actorRef ! (new JBus.UnsubscribeCallback(33))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(33, "foo"))
		actorRef ! (new JBus.DestroyConnection(33))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(33))
		actorRef ! (new JBus.Subscribe(33))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(33, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(33))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(33, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(33))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (34)" should "AUTO-GEN-TEST (34)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(34))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(34, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(34))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(34, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(34, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(34, "foo"))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (35)" should "AUTO-GEN-TEST (35)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(35))
		actorRef ! (new JBus.SubscribeCallback(35))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(35))
		actorRef ! (new JBus.Disconnect(35))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(35))
		actorRef ! (new JBus.Unsubscribe(35))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(35))
		actorRef ! (new JBus.Publish(35, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(35))
		actorRef ! (new JBus.UnsubscribeCallback(35))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(35))
		actorRef ! (new JBus.CreateConnection(35))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(35))
		actorRef ! (new JBus.Connect(35))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(35, "foo"))
		actorRef ! (new JBus.DestroyConnection(35))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())

	}

	"The System-under-test (36)" should "AUTO-GEN-TEST (36)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(36))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(36))
		actorRef ! (new JBus.UnsubscribeCallback(36))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(36))
		actorRef ! (new JBus.CreateConnection(36))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(36))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (37)" should "AUTO-GEN-TEST (37)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(37))
		actorRef ! (new JBus.CreateConnection(37))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(37))
		actorRef ! (new JBus.Disconnect(37))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(37))
		actorRef ! (new JBus.Connect(37))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(37))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(37, "foo"))
		actorRef ! (new JBus.Disconnect(37))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(37))
		actorRef ! (new JBus.Connect(37))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(37))
		actorRef ! (new JBus.UnsubscribeCallback(37))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(37))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (38)" should "AUTO-GEN-TEST (38)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(38))
		actorRef ! (new JBus.DestroyConnection(38))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(38))
		actorRef ! (new JBus.Publish(38, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(38))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(38))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (39)" should "AUTO-GEN-TEST (39)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(39))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(39))
		actorRef ! (new JBus.SubscribeCallback(39))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(39))
		actorRef ! (new JBus.UnsubscribeCallback(39))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(39, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(39))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(39))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (40)" should "AUTO-GEN-TEST (40)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(40))
		actorRef ! (new JBus.Connect(40))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(40))
		actorRef ! (new JBus.Connect(40))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(40))
		actorRef ! (new JBus.Disconnect(40))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(40))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(40))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(40))
		actorRef ! (new JBus.Unsubscribe(40))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(40))
		actorRef ! (new JBus.Publish(40, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(40))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(40))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(40, "foo"))
		actorRef ! (new JBus.DestroyConnection(40))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(40))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(40))
		actorRef ! (new JBus.CreateConnection(40))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(40))
		actorRef ! (new JBus.Connect(40))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(40))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (41)" should "AUTO-GEN-TEST (41)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(41))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(41))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(41))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(41))
		actorRef ! (new JBus.Connect(41))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(41))
		actorRef ! (new JBus.Disconnect(41))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(41))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(41))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(41))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(41))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (42)" should "AUTO-GEN-TEST (42)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(42))
		actorRef ! (new JBus.CreateConnection(42))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(42))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(42))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(42))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(42))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(42))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(42))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (43)" should "AUTO-GEN-TEST (43)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(43))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(43))
		actorRef ! (new JBus.DestroyConnection(43))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(43))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(43, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(43))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(43, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(43))
		actorRef ! (new JBus.DestroyConnection(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(43, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(43))
		actorRef ! (new JBus.Publish(43, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(43))
		actorRef ! (new JBus.UnsubscribeCallback(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())

	}

	"The System-under-test (44)" should "AUTO-GEN-TEST (44)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(44))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(44, "foo"))
		actorRef ! (new JBus.Subscribe(44))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(44))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(44))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(44))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (45)" should "AUTO-GEN-TEST (45)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(45))
		actorRef ! (new JBus.SubscribeCallback(45))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(45))
		actorRef ! (new JBus.Publish(45, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(45))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(45))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(45))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(45, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(45))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(45))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (46)" should "AUTO-GEN-TEST (46)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(46))
		actorRef ! (new JBus.Publish(46, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(46))
		actorRef ! (new JBus.UnsubscribeCallback(46))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(46))
		actorRef ! (new JBus.CreateConnection(46))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(46))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (47)" should "AUTO-GEN-TEST (47)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(47))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(47))
		actorRef ! (new JBus.SubscribeCallback(47))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(47))
		actorRef ! (new JBus.Subscribe(47))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(47))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(47))
		expectMsg(new JBus.Error())

	}

	"The System-under-test (48)" should "AUTO-GEN-TEST (48)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(48))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(48))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(48, "foo"))
		expectMsg(new JBus.Success())

	}

	"The System-under-test (49)" should "AUTO-GEN-TEST (49)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(49))
		actorRef ! (new JBus.DestroyConnection(49))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(49))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(49))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(49))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(49))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(49))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(49))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(49, "foo"))
		expectMsg(new JBus.Error())

	}

}
