// imports
import scala.concurrent.duration._
import org.scalatest._
import akka.actor._
import akka.testkit._
import com.typesafe.config._
//import org.ru.throstur.bus._

class JSpec1 extends TestKit(ActorSystem("spec1-spec-test")) with ImplicitSender with FlatSpecLike with Matchers with BeforeAndAfterAll {

	override def afterAll() = system.shutdown()


	"THE JBUS (0)" should "AUTO-GEN-TEST (0)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(0))
		actorRef ! (new JBus.Disconnect(0))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(0))
		actorRef ! (new JBus.Unsubscribe(0))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(0))
		actorRef ! (new JBus.Subscribe(0))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(0))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(0))
		actorRef ! (new JBus.Disconnect(0))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(0))
		actorRef ! (new JBus.DestroyConnection(0))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(0, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(0))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(0))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(0))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(0, "foo"))
		actorRef ! (new JBus.Unsubscribe(0))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(0))
		actorRef ! (new JBus.DestroyConnection(0))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(0))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(0))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (1)" should "AUTO-GEN-TEST (1)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(1))
		actorRef ! (new JBus.SubscribeCallback(1))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(1))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(1, "foo"))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (2)" should "AUTO-GEN-TEST (2)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(2, "foo"))
		actorRef ! (new JBus.Publish(2, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(2))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(2, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(2))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(2))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (3)" should "AUTO-GEN-TEST (3)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(3))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(3))
		actorRef ! (new JBus.SubscribeCallback(3))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(3))
		actorRef ! (new JBus.Unsubscribe(3))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(3))
		actorRef ! (new JBus.Publish(3, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(3))
		actorRef ! (new JBus.Connect(3))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(3, "foo"))
		actorRef ! (new JBus.Subscribe(3))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(3))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(3))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(3))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (4)" should "AUTO-GEN-TEST (4)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(4))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(4))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(4, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(4))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (5)" should "AUTO-GEN-TEST (5)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(5))
		actorRef ! (new JBus.UnsubscribeCallback(5))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(5))
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(5))
		actorRef ! (new JBus.Disconnect(5))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(5, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(5))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(5))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(5))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (6)" should "AUTO-GEN-TEST (6)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(6))
		actorRef ! (new JBus.Connect(6))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(6))
		actorRef ! (new JBus.SubscribeCallback(6))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(6))
		actorRef ! (new JBus.UnsubscribeCallback(6))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(6))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(6, "foo"))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (7)" should "AUTO-GEN-TEST (7)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(7))
		actorRef ! (new JBus.SubscribeCallback(7))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(7))
		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(7))
		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(7))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(7))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(7))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(7))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (8)" should "AUTO-GEN-TEST (8)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(8))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(8, "foo"))
		actorRef ! (new JBus.CreateConnection(8))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(8))
		actorRef ! (new JBus.DestroyConnection(8))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(8))
		actorRef ! (new JBus.Publish(8, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(8))
		actorRef ! (new JBus.DestroyConnection(8))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(8, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(8, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(8))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(8))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(8))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(8, "foo"))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (9)" should "AUTO-GEN-TEST (9)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(9))
		actorRef ! (new JBus.CreateConnection(9))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(9))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(9))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(9))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (10)" should "AUTO-GEN-TEST (10)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(10))
		actorRef ! (new JBus.DestroyConnection(10))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(10, "foo"))
		actorRef ! (new JBus.Subscribe(10))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(10))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(10))
		actorRef ! (new JBus.Subscribe(10))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(10, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(10, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(10))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(10))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (11)" should "AUTO-GEN-TEST (11)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(11))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(11))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(11))
		actorRef ! (new JBus.SubscribeCallback(11))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(11))
		actorRef ! (new JBus.Disconnect(11))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(11))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(11))
		actorRef ! (new JBus.Subscribe(11))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(11))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(11))
		actorRef ! (new JBus.Disconnect(11))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(11))
		actorRef ! (new JBus.Connect(11))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(11))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(11))
		actorRef ! (new JBus.SubscribeCallback(11))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(11))
		actorRef ! (new JBus.Unsubscribe(11))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(11))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (12)" should "AUTO-GEN-TEST (12)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(12))
		actorRef ! (new JBus.CreateConnection(12))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(12))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (13)" should "AUTO-GEN-TEST (13)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(13))
		actorRef ! (new JBus.SubscribeCallback(13))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(13))
		actorRef ! (new JBus.CreateConnection(13))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(13, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(13))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(13, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(13, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(13))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(13, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(13))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (14)" should "AUTO-GEN-TEST (14)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(14))
		actorRef ! (new JBus.Subscribe(14))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(14, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(14))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(14))
		actorRef ! (new JBus.Disconnect(14))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(14))
		actorRef ! (new JBus.UnsubscribeCallback(14))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(14))
		actorRef ! (new JBus.Subscribe(14))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(14))
		actorRef ! (new JBus.Unsubscribe(14))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(14))
		actorRef ! (new JBus.Subscribe(14))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(14))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(14))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(14))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(14))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(14))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(14))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(14))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (15)" should "AUTO-GEN-TEST (15)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(15))
		actorRef ! (new JBus.UnsubscribeCallback(15))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(15))
		actorRef ! (new JBus.Publish(15, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(15))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(15))
		actorRef ! (new JBus.Disconnect(15))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(15))
		actorRef ! (new JBus.Publish(15, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(15))
		actorRef ! (new JBus.Connect(15))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(15))
		actorRef ! (new JBus.CreateConnection(15))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(15))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(15, "foo"))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(15))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(15))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (16)" should "AUTO-GEN-TEST (16)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(16))
		actorRef ! (new JBus.UnsubscribeCallback(16))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(16))
		actorRef ! (new JBus.Disconnect(16))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(16))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(16))
		actorRef ! (new JBus.Publish(16, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(16))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(16, "foo"))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (17)" should "AUTO-GEN-TEST (17)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(17))
		actorRef ! (new JBus.UnsubscribeCallback(17))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(17))
		actorRef ! (new JBus.Disconnect(17))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(17))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(17))
		actorRef ! (new JBus.Unsubscribe(17))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(17))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(17, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(17))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(17))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(17))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(17))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(17))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (18)" should "AUTO-GEN-TEST (18)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(18))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(18, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(18))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(18, "foo"))
		actorRef ! (new JBus.UnsubscribeCallback(18))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(18))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(18))
		actorRef ! (new JBus.SubscribeCallback(18))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(18))
		actorRef ! (new JBus.SubscribeCallback(18))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(18))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(18))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(18))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(18, "foo"))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (19)" should "AUTO-GEN-TEST (19)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(19))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(19))
		actorRef ! (new JBus.Subscribe(19))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(19))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(19))
		actorRef ! (new JBus.Disconnect(19))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(19))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(19))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(19, "foo"))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (20)" should "AUTO-GEN-TEST (20)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(20))
		actorRef ! (new JBus.Publish(20, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(20))
		actorRef ! (new JBus.Connect(20))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(20))
		actorRef ! (new JBus.SubscribeCallback(20))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(20))
		actorRef ! (new JBus.DestroyConnection(20))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(20))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(20))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(20))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(20))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (21)" should "AUTO-GEN-TEST (21)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(21))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(21))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (22)" should "AUTO-GEN-TEST (22)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(22, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(22))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(22))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (23)" should "AUTO-GEN-TEST (23)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(23))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(23))
		actorRef ! (new JBus.DestroyConnection(23))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(23))
		actorRef ! (new JBus.Subscribe(23))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(23))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(23))
		actorRef ! (new JBus.Publish(23, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(23))
		actorRef ! (new JBus.Publish(23, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(23))
		actorRef ! (new JBus.DestroyConnection(23))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(23))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(23))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (24)" should "AUTO-GEN-TEST (24)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(24))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(24, "foo"))
		actorRef ! (new JBus.CreateConnection(24))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(24))
		actorRef ! (new JBus.CreateConnection(24))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(24))
		actorRef ! (new JBus.CreateConnection(24))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(24))
		actorRef ! (new JBus.SubscribeCallback(24))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(24))
		actorRef ! (new JBus.CreateConnection(24))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(24))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(24))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(24))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (25)" should "AUTO-GEN-TEST (25)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(25))
		actorRef ! (new JBus.Unsubscribe(25))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(25))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(25))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(25, "foo"))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (26)" should "AUTO-GEN-TEST (26)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(26))
		actorRef ! (new JBus.Subscribe(26))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(26))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(26, "foo"))
		actorRef ! (new JBus.Publish(26, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(26))
		actorRef ! (new JBus.Unsubscribe(26))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(26))
		actorRef ! (new JBus.Subscribe(26))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(26))
		actorRef ! (new JBus.Unsubscribe(26))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(26))
		actorRef ! (new JBus.Publish(26, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(26))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(26, "foo"))
		actorRef ! (new JBus.CreateConnection(26))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())

	}

	"THE JBUS (27)" should "AUTO-GEN-TEST (27)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(27))
		actorRef ! (new JBus.Unsubscribe(27))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(27))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(27))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(27))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(27))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(27))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(27))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(27, "foo"))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (28)" should "AUTO-GEN-TEST (28)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(28))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(28))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(28))
		actorRef ! (new JBus.Disconnect(28))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(28))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(28))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(28))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(28))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(28))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (29)" should "AUTO-GEN-TEST (29)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(29))
		actorRef ! (new JBus.UnsubscribeCallback(29))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(29))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(29))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(29))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (30)" should "AUTO-GEN-TEST (30)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(30))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(30))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(30))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(30))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(30, "foo"))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (31)" should "AUTO-GEN-TEST (31)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(31))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(31))
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(31))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(31))
		actorRef ! (new JBus.Unsubscribe(31))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(31))
		actorRef ! (new JBus.Disconnect(31))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(31))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(31, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(31))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(31))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (32)" should "AUTO-GEN-TEST (32)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(32))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(32))
		actorRef ! (new JBus.SubscribeCallback(32))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(32))
		actorRef ! (new JBus.CreateConnection(32))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(32))
		actorRef ! (new JBus.Publish(32, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(32, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(32))
		actorRef ! (new JBus.Disconnect(32))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(32, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(32))
		actorRef ! (new JBus.Unsubscribe(32))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(32))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(32))
		actorRef ! (new JBus.UnsubscribeCallback(32))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())

	}

	"THE JBUS (33)" should "AUTO-GEN-TEST (33)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(33))
		actorRef ! (new JBus.Disconnect(33))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(33))
		actorRef ! (new JBus.Disconnect(33))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(33))
		actorRef ! (new JBus.DestroyConnection(33))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(33, "foo"))
		actorRef ! (new JBus.Publish(33, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(33))
		actorRef ! (new JBus.CreateConnection(33))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(33, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(33, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(33))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(33))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(33))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (34)" should "AUTO-GEN-TEST (34)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(34))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(34))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(34))
		actorRef ! (new JBus.CreateConnection(34))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(34))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(34))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(34))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(34))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (35)" should "AUTO-GEN-TEST (35)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(35))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(35))
		actorRef ! (new JBus.Disconnect(35))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(35))
		actorRef ! (new JBus.Connect(35))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(35))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(35))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(35))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(35))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(35))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (36)" should "AUTO-GEN-TEST (36)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(36))
		actorRef ! (new JBus.UnsubscribeCallback(36))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(36))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(36))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(36))
		actorRef ! (new JBus.SubscribeCallback(36))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(36))
		actorRef ! (new JBus.Publish(36, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(36))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(36))
		actorRef ! (new JBus.CreateConnection(36))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(36))
		actorRef ! (new JBus.Connect(36))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(36))
		actorRef ! (new JBus.DestroyConnection(36))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(36))
		actorRef ! (new JBus.Publish(36, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(36))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (37)" should "AUTO-GEN-TEST (37)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(37))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(37))
		actorRef ! (new JBus.Subscribe(37))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(37))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(37))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(37))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(37))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(37))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(37))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(37))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (38)" should "AUTO-GEN-TEST (38)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(38))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(38))
		actorRef ! (new JBus.Disconnect(38))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(38))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(38))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (39)" should "AUTO-GEN-TEST (39)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(39))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(39))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(39))
		actorRef ! (new JBus.DestroyConnection(39))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(39, "foo"))
		actorRef ! (new JBus.CreateConnection(39))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(39))
		actorRef ! (new JBus.UnsubscribeCallback(39))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(39))
		actorRef ! (new JBus.SubscribeCallback(39))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(39))
		actorRef ! (new JBus.Subscribe(39))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(39))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(39))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (40)" should "AUTO-GEN-TEST (40)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(40))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(40))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (41)" should "AUTO-GEN-TEST (41)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(41))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Connect(41))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.CreateConnection(41))
		actorRef ! (new JBus.Connect(41))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(41))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(41))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(41, "foo"))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(41))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(41))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(41))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (42)" should "AUTO-GEN-TEST (42)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(42))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (43)" should "AUTO-GEN-TEST (43)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(43))
		actorRef ! (new JBus.Publish(43, "foo"))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(43))
		actorRef ! (new JBus.SubscribeCallback(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(43))
		actorRef ! (new JBus.SubscribeCallback(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(43))
		actorRef ! (new JBus.Publish(43, "foo"))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(43))
		actorRef ! (new JBus.SubscribeCallback(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(43))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.DestroyConnection(43))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(43))
		actorRef ! (new JBus.Unsubscribe(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(43))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(43))
		actorRef ! (new JBus.UnsubscribeCallback(43))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())

	}

	"THE JBUS (44)" should "AUTO-GEN-TEST (44)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(44))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(44, "foo"))
		actorRef ! (new JBus.CreateConnection(44))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(44))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(44))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(44))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(44))
		actorRef ! (new JBus.Unsubscribe(44))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())

	}

	"THE JBUS (45)" should "AUTO-GEN-TEST (45)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(45))
		actorRef ! (new JBus.Disconnect(45))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(45))
		actorRef ! (new JBus.SubscribeCallback(45))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(45, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(45))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(45))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(45, "foo"))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (46)" should "AUTO-GEN-TEST (46)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(46))
		actorRef ! (new JBus.Disconnect(46))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(46))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Unsubscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(46))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(46))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(46))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.SubscribeCallback(46))
		expectMsg(new JBus.Success())

	}

	"THE JBUS (47)" should "AUTO-GEN-TEST (47)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(47))
		actorRef ! (new JBus.DestroyConnection(47))
		expectMsg(new JBus.Success())
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(47))
		actorRef ! (new JBus.Disconnect(47))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(47, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(47))
		actorRef ! (new JBus.DestroyConnection(47))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Subscribe(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(47))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Subscribe(47))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.UnsubscribeCallback(47))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (48)" should "AUTO-GEN-TEST (48)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(48))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(48, "foo"))
		actorRef ! (new JBus.Subscribe(48))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(48))
		actorRef ! (new JBus.Unsubscribe(48))
		expectMsg(new JBus.Error())
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(48))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.DestroyConnection(48))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.SubscribeCallback(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.CreateConnection(48))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(48, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(48, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(48, "foo"))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Unsubscribe(48))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Disconnect(48))
		expectMsg(new JBus.Error())

	}

	"THE JBUS (49)" should "AUTO-GEN-TEST (49)" in {
		val actorRef = TestActorRef[JBus]

		actorRef ! (new JBus.CreateConnection(49))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Disconnect(49))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Connect(49))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.Publish(49, "foo"))
		expectMsg(new JBus.Success())
		actorRef ! (new JBus.UnsubscribeCallback(49))
		expectMsg(new JBus.Error())
		actorRef ! (new JBus.Publish(49, "foo"))
		expectMsg(new JBus.Success())

	}

}

